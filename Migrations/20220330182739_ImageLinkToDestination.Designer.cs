// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Models;

namespace Travel.Solution.Migrations
{
#pragma warning disable CS1591
  [DbContext(typeof(TravelContext))]
  [Migration("20220330182739_ImageLinkToDestination")]
  partial class ImageLinkToDestination
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("Relational:MaxIdentifierLength", 64)
          .HasAnnotation("ProductVersion", "5.0.0");

      modelBuilder.Entity("Travel.Models.Destination", b =>
          {
            b.Property<int>("DestinationId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            b.Property<float>("AverageRating")
                      .HasColumnType("float");

            b.Property<string>("City")
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.Property<string>("Country")
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.Property<string>("ImgLink")
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.Property<string>("Name")
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.Property<int>("NumOfReviews")
                      .HasColumnType("int");

            b.HasKey("DestinationId");

            b.ToTable("Destinations");
          });

      modelBuilder.Entity("Travel.Models.Review", b =>
          {
            b.Property<int>("ReviewId")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            b.Property<int>("DestinationId")
                      .HasColumnType("int");

            b.Property<int>("Rating")
                      .HasColumnType("int");

            b.Property<string>("ReviewText")
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.Property<string>("UserName")
                      .IsRequired()
                      .HasColumnType("longtext CHARACTER SET utf8mb4");

            b.HasKey("ReviewId");

            b.HasIndex("DestinationId");

            b.ToTable("Reviews");
          });

      modelBuilder.Entity("Travel.Models.Review", b =>
          {
            b.HasOne("Travel.Models.Destination", null)
                      .WithMany("Reviews")
                      .HasForeignKey("DestinationId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Travel.Models.Destination", b =>
          {
            b.Navigation("Reviews");
          });
#pragma warning restore 612, 618
#pragma warning restore CS1591
    }
  }
}
